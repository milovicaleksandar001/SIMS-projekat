<Window x:Class="Booking.View.GuideCreateTour"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"        
        Title="GuideCreateTour" Height="750" Width="830" WindowStartupLocation="CenterScreen" ResizeMode="NoResize" Background="#D6E6F2">
    <Window.Resources>
        <ControlTemplate x:Key="ValidationTemplate">
            <StackPanel>
                <AdornedElementPlaceholder x:Name="NameTextBox" />
                <TextBlock Text="{Binding [0].ErrorContent}" Foreground="Red" />
            </StackPanel>
        </ControlTemplate>
    </Window.Resources>
    
    <Grid>

        <TextBlock Margin="38 8 0 0" FontWeight="Bold" FontSize="32" Text="Create tour" Foreground="#FFFFF200" >
            <TextBlock.Effect>
                <DropShadowEffect ShadowDepth="4" Color="#303841" BlurRadius="5" />
            </TextBlock.Effect>
        </TextBlock>

        <Separator Margin="40 -610 0 0" Width="750" HorizontalAlignment="Left" />
        
        <Label Content="Name*" HorizontalAlignment="Left" Margin="40,70,0,0" VerticalAlignment="Top" FontSize="15" />
        <TextBox x:Name="tbName"  HorizontalAlignment="Left" Margin="170,75,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="180" FontSize="15" 
                 Text="{Binding Path=TourName, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                 Validation.ErrorTemplate="{StaticResource ValidationTemplate}" >
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Style.Triggers>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="BorderBrush" Value="Red" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>


        <Label Content="Description*" HorizontalAlignment="Left" Margin="40,120,0,0" VerticalAlignment="Top" FontSize="15"/>
        <TextBox x:Name="tbDescription" HorizontalAlignment="Left" Margin="170,128,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="180" FontSize="15" Height="120" 
                 Text="{Binding Path=Description, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                 Validation.ErrorTemplate="{StaticResource ValidationTemplate}" >
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Style.Triggers>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="BorderBrush" Value="Red" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <Label Content="Max guests*" HorizontalAlignment="Left" Margin="40,270,0,0" VerticalAlignment="Top" FontSize="15"/>
        <TextBox x:Name="tbMaxGuests" HorizontalAlignment="Left" Margin="170,275,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" FontSize="15" 
                 Text="{Binding Path=MaxGuestNumber, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                 Validation.ErrorTemplate="{StaticResource ValidationTemplate}" >
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Style.Triggers>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="BorderBrush" Value="Red" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>
        <StackPanel Margin="-690,200,0,0">
            <Button Panel.ZIndex="1" Margin="490,75,0,0"  Content="+" Height="22" Width="22" FontSize="14" FontWeight="Bold" Command="{Binding IncreaseMaxGuests}" />
            <Button Panel.ZIndex="1" Margin="552,-22,0,0"  Content="-" Height="22" Width="22" FontSize="14" FontWeight="Bold" Command="{Binding DecreaseMaxGuests}" />
        </StackPanel>


        <Label  Content="Tour start date*" HorizontalAlignment="Left" Margin="40,320,0,0" VerticalAlignment="Top" FontSize="15" />
        <StackPanel  Margin="0,0,-105,0">
            <DatePicker x:Name="datePicker" Margin="-398,325,0,0" Width="180" 
                        Text="{Binding Path=StartTime,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                        Validation.ErrorTemplate="{StaticResource ValidationTemplate}" >
                <DatePicker.Style>
                    <Style TargetType="{x:Type DatePicker}">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter Property="BorderBrush" Value="Red" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DatePicker.Style>
            </DatePicker>
        </StackPanel>

        <Label Content="Duration*" HorizontalAlignment="Left" Margin="40,370,0,0" VerticalAlignment="Top" FontSize="15" />
        <TextBox x:Name="tbDuration" HorizontalAlignment="Left" Margin="170,375,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" FontSize="15" 
                 Text="{Binding Path=Duration, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                        Validation.ErrorTemplate="{StaticResource ValidationTemplate}">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Style.Triggers>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="BorderBrush" Value="Red" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>
            <StackPanel Margin="-690,300,0,0">
            <Button Panel.ZIndex="1" Margin="490,75,0,0"  Content="+" Height="22" Width="22" FontSize="14" FontWeight="Bold" Command="{Binding IncreaseDuration}" />
            <Button Panel.ZIndex="1" Margin="552,-22,0,0"  Content="-" Height="22" Width="22" FontSize="14" FontWeight="Bold" Command="{Binding DecreaseDuration}" />
        </StackPanel>

        <Label Content="Country*" HorizontalAlignment="Left" Margin="40,420,0,0" VerticalAlignment="Top" FontSize="15" />
        <Label Content="City*" HorizontalAlignment="Left" Margin="40,470,0,0" VerticalAlignment="Top" FontSize="15" />

        <StackPanel Margin="0,0,-105,0">
            <ComboBox  Margin="-399,425,0,0" Width="180" 
                      ItemsSource="{Binding Path=CountryCollection}" 
                      IsDropDownOpen="{Binding IsCountryComboBoxOpen}"
                      SelectedItem="{Binding Path=SelectedCountry, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" Validation.ErrorTemplate="{StaticResource ValidationTemplate}" >
                <ComboBox.Style>
                    <Style TargetType="{x:Type ComboBox}">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter Property="BorderBrush" Value="Red" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged" >
                        <i:InvokeCommandAction Command="{Binding FillCityCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
            <ComboBox Margin="-399,30,0,0" Width="180" 
                      IsEnabled="{Binding CityComboboxEnabled, UpdateSourceTrigger=PropertyChanged}" 
                      ItemsSource="{Binding Path=CityCollection}" 
                      IsDropDownOpen="{Binding IsCityComboBoxOpen}"
                      SelectedItem="{Binding Path=SelectedCity, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" Validation.ErrorTemplate="{StaticResource ValidationTemplate}" >
                <ComboBox.Style>
                    <Style TargetType="{x:Type ComboBox}">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter Property="BorderBrush" Value="Red" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>

            </ComboBox>
        </StackPanel>

        <Label Content="Language*" HorizontalAlignment="Left" Margin="40,530,0,0" VerticalAlignment="Top" FontSize="15" />
        <TextBox x:Name="tbLanguage" HorizontalAlignment="Left" Margin="170,535,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="180" FontSize="15" 
                 Text="{Binding Path=TourLanguage, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                        Validation.ErrorTemplate="{StaticResource ValidationTemplate}">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Style.Triggers>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="BorderBrush" Value="Red" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <Label Content="Pictures*" HorizontalAlignment="Left" Margin="450,70,0,0" VerticalAlignment="Top" FontSize="15" />
        <TextBox  HorizontalAlignment="Left" Margin="540,75,0,0" TextWrapping="Wrap"  VerticalAlignment="Top" Width="180" MaxHeight="35" FontSize="15" 
                  Text="{Binding Path=TbPictures, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                        Validation.ErrorTemplate="{StaticResource ValidationTemplate}">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Style.Triggers>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="BorderBrush" Value="Red" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>


        </TextBox>
        <StackPanel Margin="0,0,-192,2">
            <Button Panel.ZIndex="1" Margin="490,75,0,0"  Content="+" Height="22" Width="22" FontSize="14" FontWeight="Bold" Command="{Binding AddPicture}" />
            <Button Panel.ZIndex="1" Margin="552,-22,0,0"  Content="-" Height="22" Width="22" FontSize="14" FontWeight="Bold" Command="{Binding RemovePicture}" />
        </StackPanel>

        <Border BorderBrush="Black" BorderThickness="2">
            <StackPanel Margin="430,-290,0,0" Width="350" Height="200">
                <Button Content="⬅" Height="18" Width="18" Margin="-315 85 0 0" Command="{Binding PreviousPicture}" Visibility="{Binding ButtonPreviousVisibility}"/>

                <Button Content="➞" Height="18" Width="18" Margin="320 -15 0 0" Command="{Binding NextPicture}" Visibility="{Binding ButtonNextVisibility}"/>

                <Image Stretch="UniformToFill" Height="185" Width="280" Margin="0 -100 0 0" Source="{Binding ImageSlideshowSource}"/>

            </StackPanel>
        </Border>
        
        <Label Content="Key points*" HorizontalAlignment="Left" Margin="450,360,0,0"  VerticalAlignment="Top" FontSize="15"/>
        <StackPanel Margin="0,0,-105,0">
            <ComboBox Margin="360,365,0,0" Width="180" Height="21"  BorderBrush="Black" Background="Black" 
                      ItemsSource="{Binding Path=KeyPointsCollection}" 
                      SelectedIndex="{Binding SelectedIndexKeyPoint}"
                      IsDropDownOpen="{Binding IsKeyPointsComboBoxOpen}"
                      SelectedItem="{Binding Path=SelectedKeyPoint, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" Validation.ErrorTemplate="{StaticResource ValidationTemplate}" >
                <ComboBox.Style>
                    <Style TargetType="{x:Type ComboBox}">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter Property="BorderBrush" Value="Red" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
                
                
            </ComboBox>
                      
            <Button Panel.ZIndex="1" Margin="577 -20 0 0" Height="22" Width="22" Content="+" FontSize="14" FontWeight="Bold" Command="{Binding AddTourKeyPoint}" />
            <Button Panel.ZIndex="1" Margin="638 -25 0 0" Height="22" Width="22" Content="-" FontSize="14" FontWeight="Bold" Command="{Binding RemoveTourKeyPoint}"  />
        </StackPanel>

        <DataGrid 
            x:Name="KeyPointsDataGrid" 
            BorderBrush="Black"
            SelectionMode="Single"
            IsReadOnly="True" 
            Width="330" Height="130" Margin="435 273 0 0"
            AlternationCount="2"
            AutoGenerateColumns="False"             
            CanUserResizeColumns="False" CanUserAddRows="False" CanUserResizeRows="False" CanUserSortColumns="False" CanUserReorderColumns="False"
            SelectedItem="{Binding SelectedTourKeyPoint, UpdateSourceTrigger=PropertyChanged}"
            ItemsSource="{Binding Path=tourKeyPoints1, UpdateSourceTrigger=PropertyChanged}">
            <DataGrid.Columns>
                <DataGridTextColumn Width="161" Header="State" Binding="{Binding Location.State}"></DataGridTextColumn>
                <DataGridTextColumn Width="161" Header="City" Binding="{Binding Location.City}"></DataGridTextColumn>
            </DataGrid.Columns>
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="Background" Value="#ADBAC4"/>
                    <Style.Triggers>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                            <Setter Property="Background" Value="#F5F5F5"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>

        </DataGrid>
        

        <WrapPanel FlowDirection="LeftToRight" Margin="10,620,0,0">
            <Button Margin ="318 10 0 0 " HorizontalAlignment="Left"  Width="100" Height="45" FontWeight="Bold" FontSize="18" Command="{Binding SaveTourCommand}" IsEnabled="True"  >Create
                <Button.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="5"></Setter>
                    </Style>
                </Button.Resources>
            </Button>
            <Button Margin="10 10 0 0"  VerticalAlignment="Center" HorizontalAlignment="Left" Width="100" Height="45" FontWeight="Bold" FontSize="18" Command="{Binding Close}" >Close
                <Button.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="5"></Setter>
                    </Style>
                </Button.Resources>
            </Button>
        </WrapPanel>

    </Grid>


</Window>
